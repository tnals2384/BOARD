<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.springMybatisBoard.model.repository.BoardRepository">

    <resultMap id="boardResultMap" type="org.example.springMybatisBoard.model.dto.BoardDTO">
        <result property="no" column="no"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="writer" column="writer"/>
        <result property="readCount" column="read_count"/>
        <result property="regDate" column="reg_date"/>
    </resultMap>

    <insert id="insert" parameterType="org.example.springMybatisBoard.model.dto.BoardDTO">
        INSERT INTO BOARD_TB(TITLE, WRITER, CONTENT, REG_DATE)
        VALUES (#{title}, #{writer}, #{content}, NOW())
    </insert>

    <update id="update">
        UPDATE BOARD_TB
        <set>
            <if test="title != null and title.length() > 0">TITLE = #{title},</if>
            <if test="content != null and content.length() > 0">CONTENT = #{content},</if>
        </set>
        WHERE NO = #{no}
    </update>

    <delete id="delete">
        DELETE FROM BOARD_TB WHERE NO = #{no}
    </delete>

    <!--resultMap을 이용해 결과 받아오기 -->
    <select id="selectOne" parameterType="int" resultMap="boardResultMap">
        SELECT NO,TITLE,WRITER,CONTENT,READ_COUNT,REG_DATE FROM BOARD_TB WHERE NO = #{no}
    </select>

    <!-- alias 사용해서 이름 맞춰줄수도 있다.-->
    <select id="selectAll" resultType="org.example.springMybatisBoard.model.dto.BoardDTO">
        SELECT NO,TITLE, WRITER, READ_COUNT as 'readCount', REG_DATE as 'regDate' FROM BOARD_TB
    </select>

    <update id="updateReadCount">
        UPDATE BOARD_TB
        SET READ_COUNT = READ_COUNT + 1
        WHERE NO = #{no}
    </update>

</mapper>